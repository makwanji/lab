---
- name: Install Docker and Configure User Access
  hosts: all
  become: yes
  tasks:

    - name: Install required packages (Debian-based)
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
      when: ansible_os_family == "Debian"

    - name: Install required packages (RHEL-based)
      yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present
      when: ansible_os_family == "RedHat"

    - name: Add Docker GPG key (Debian-based)
      apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker repository (Debian-based)
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker repository (RHEL-based)
      shell: |
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo
      when: ansible_os_family == "RedHat"

    - name: Install Docker (Debian-based)
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Docker (RHEL-based)
      yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
      when: ansible_os_family == "RedHat"

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Check if user is already in the Docker group
      command: id -nG {{ ansible_user }}
      register: user_groups
      changed_when: false

    - name: Add user to the Docker group if not already present
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      when: "'docker' not in user_groups.stdout"

    - name: Set vm.max_map_count to 262144 (temporary - immediate effect)
      sysctl:
        name: vm.max_map_count
        value: "262144"
        state: present

    - name: Ensure vm.max_map_count persists across reboots
      lineinfile:
        path: /etc/sysctl.conf
        line: "vm.max_map_count=262144"
        create: yes
      notify: Reload sysctl

    - name: Check if Docker network 'backend' exists
      command: docker network ls --format '{{ "{{.Name}}" }}'
      register: docker_networks
      changed_when: false

    - name: Create Docker network 'backend' if it does not exist
      command: docker network create backend
      when: "'backend' not in docker_networks.stdout"

    - name: Check if Docker network 'frontend' exists
      command: docker network ls --format '{{ "{{.Name}}" }}'
      register: docker_networks
      changed_when: false

    - name: Create Docker network 'frontend' if it does not exist
      command: docker network create frontend
      when: "'frontend' not in docker_networks.stdout"

    - name: Print completion message
      debug:
        msg: "Docker installation and configuration complete. Please log out and log back in for the group changes to take effect."
